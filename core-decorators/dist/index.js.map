{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AAEA,SAAS,QAAT,CAAkB,MAAlB,EAA0B,GAA1B,EAA+B,UAA/B,EAA2C;AAAA,MAC1B,EAD0B,GACnB,UADmB,CACjC,KADiC;AAEzC,SAAO;AACL,IAAA,GADK,iBACC;AACJ,UAAM,OAAO,GAAG,EAAE,CAAC,IAAH,CAAQ,IAAR,CAAhB;AACA,MAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC;AAC/B,QAAA,KAAK,EAAE;AADwB,OAAjC;AAGA,aAAO,OAAP;AACD;AAPI,GAAP;AASD;;IAEK,M;;;;;;;kCAEU;AACZ,aAAO,IAAP;AACD;;;;kEAHA,Q;AAMH,IAAM,MAAM,GAAG,IAAI,MAAJ,EAAf;IACQ,W,GAAgB,M,CAAhB,W;AACR,OAAO,CAAC,GAAR,CAAY,MAAM,KAAK,WAAW,EAAlC","file":"index.js","sourcesContent":["// const { autobind } = require('core-decorators')\r\n\r\nfunction autobind(target, key, discriptor) {\r\n  const { value: fn } = discriptor\r\n  return {\r\n    get() {\r\n      const boundFn = fn.bind(this)\r\n      Object.defineProperty(this, key, {\r\n        value: boundFn,\r\n      })\r\n      return boundFn\r\n    }\r\n  }\r\n}\r\n\r\nclass Person {\r\n  @autobind\r\n  getInstance() {\r\n    return this\r\n  }\r\n}\r\n\r\nconst person = new Person()\r\nconst { getInstance } = person\r\nconsole.log(person === getInstance())\r\n"]}