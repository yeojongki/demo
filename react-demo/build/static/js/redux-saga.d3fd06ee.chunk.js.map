{"version":3,"sources":["views/redux-saga/saga.js","views/redux-saga/Counter.jsx","views/redux-saga/main.jsx","views/redux-saga/reducers.js"],"names":["helloSaga","incrementAsync","incrementAsyncByInput","incrementAsyncSelf","watchIncrementAsync","watchIncrementAsyncLatest","rootSaga","request","Promise","resolve","reject","setTimeout","regenerator_default","a","wrap","_context","prev","next","console","log","stop","_marked","_context2","delay","put","type","_marked2","_ref","payload","_context3","value","_marked3","_context4","call","_marked4","_context5","takeEvery","_marked5","_context6","takeLatest","_marked6","_context7","all","_marked7","connect","state","count","onIncrement","onDecrement","onIncrementAsync","onIncrementAsyncLatest","onIncrementAsyncLatestByInput","react_default","createElement","Fragment","onClick","sagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","arguments","length","undefined","input","action","Object","objectSpread","run","dispatch","__webpack_exports__","es","redux_saga_Counter","getState","style","width","placeholder","onChange","e","target"],"mappings":"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","file":"static/js/redux-saga.d3fd06ee.chunk.js","sourcesContent":["import { all, delay, call, put, takeEvery, takeLatest } from 'redux-saga/effects'\r\n\r\nconst request = () => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(resolve, 1000)\r\n  })\r\n}\r\n\r\nexport function* helloSaga() {\r\n  yield console.log('hello Sagas!')\r\n}\r\n\r\nexport function* incrementAsync() {\r\n  yield delay(1000)\r\n  yield put({ type: 'INCREMENT' })\r\n}\r\n\r\nexport function* incrementAsyncByInput({ payload }) {\r\n  yield delay(1000)\r\n  yield put({ type: 'INCREMENT_BY_INPUT', payload: { value: payload.value } })\r\n}\r\n\r\nexport function* incrementAsyncSelf() {\r\n  yield call(request)\r\n  yield put({ type: 'INCREMENT' })\r\n}\r\n\r\nexport function* watchIncrementAsync() {\r\n  yield takeEvery('INCREMENT_ASYNC', incrementAsync)\r\n}\r\n\r\nexport function* watchIncrementAsyncLatest() {\r\n  yield takeLatest('INCREMENT_ASYNC_LATEST', incrementAsyncSelf)\r\n  yield takeLatest('INCREMENT_ASYNC_LATEST_BY_INPUT', incrementAsyncByInput)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([helloSaga(), watchIncrementAsync(), watchIncrementAsyncLatest()])\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Counter({\r\n  count,\r\n  onIncrement,\r\n  onDecrement,\r\n  onIncrementAsync,\r\n  onIncrementAsyncLatest,\r\n  onIncrementAsyncLatestByInput\r\n}) {\r\n  return (\r\n    <>\r\n      <button onClick={onIncrement}>+1</button>\r\n      <button onClick={onDecrement}>-1</button>\r\n      <button onClick={onIncrementAsync}>+1 after 1s</button>\r\n      <button onClick={onIncrementAsyncLatest}>+1 latest after 1s</button>\r\n      <button onClick={onIncrementAsyncLatestByInput}>increment latest after 1s by input</button>\r\n      <div>Now: {count} times</div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    count: state.count\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Counter)\r\n","import React from 'react'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { Provider } from 'react-redux'\r\nimport reducer from './reducers'\r\nimport rootSaga from './saga'\r\n\r\nimport Counter from './Counter'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extensionâ€™s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(sagaMiddleware)\r\n  // other store enhancers if any\r\n)\r\nconst store = createStore(reducer, enhancer)\r\nsagaMiddleware.run(rootSaga)\r\n\r\nconst action = (type, payload) => store.dispatch({ type, payload })\r\n\r\nexport default () => (\r\n  <Provider store={store}>\r\n    <Counter\r\n      onIncrement={() => action('INCREMENT')}\r\n      onDecrement={() => action('DECREMENT')}\r\n      onIncrementAsync={() => action('INCREMENT_ASYNC')}\r\n      onIncrementAsyncLatest={() => action('INCREMENT_ASYNC_LATEST')}\r\n      onIncrementAsyncLatestByInput={() => action('INCREMENT_ASYNC_LATEST_BY_INPUT', { value: store.getState().input })}\r\n    />\r\n    <div>\r\n      <input\r\n        style={{ width: '40%' }}\r\n        type=\"number\"\r\n        placeholder=\"input a num  & click `IncrementByInput`\"\r\n        onChange={e => action('SET_INPUT_VALUE', { value: +e.target.value })}\r\n      />\r\n    </div>\r\n  </Provider>\r\n)\r\n","export default function counter(state = { count: 0, input: '' }, action) {\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      return { ...state, count: state.count + 1 }\r\n    case 'DECREMENT':\r\n      return { ...state, count: state.count - 1 }\r\n    case 'SET_INPUT_VALUE':\r\n      return { ...state, input: action.payload.value }\r\n    case 'INCREMENT_BY_INPUT':\r\n      return { ...state, count: state.count + action.payload.value }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"],"sourceRoot":""}